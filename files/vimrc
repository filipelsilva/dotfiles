source $HOME/dotfiles/files/defaults.vim

" Plugins {{{
function! PackInit() abort
	packadd minpac
	call minpac#init()
	call minpac#add('k-takata/minpac', {'type': 'opt'})

	" Identation detector
	call minpac#add('timakro/vim-yadi')

	" Comment stuff
	call minpac#add('tpope/vim-commentary')

	" Surround stuff
	call minpac#add('tpope/vim-surround')

	" Colorscheme
	call minpac#add('lifepillar/vim-gruvbox8')

	" Fzf
	call minpac#add('junegunn/fzf.vim')

	" Lsp and completion
	call minpac#add('neoclide/coc.nvim', {'branch': 'release'})

endfunction

command! PackUpdate source $MYVIMRC | call PackInit() | call minpac#update()
command! PackClean  source $MYVIMRC | call PackInit() | call minpac#clean()
" }}}

" Colorscheme
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set cursorlineopt=number
set cursorline
set background=dark
set termguicolors
colorscheme gruvbox8_hard

" DetectIndent
autocmd BufRead * DetectIndent

" Fzf
set runtimepath+=$HOME/.fzf
let g:fzf_action = {'ctrl-t':'tab split', 'ctrl-s':'split', 'ctrl-v':'vsplit'}
let g:fzf_layout = {'window': {'width': 0.9, 'height': 0.7}}
nnoremap <silent> <expr> <leader>f (len(system('git rev-parse')) ? ':Files' : ':GFiles')."\<cr>"
nnoremap <silent> <leader>r <cmd>Rg<cr>
nnoremap <silent> <leader>j <cmd>Buffers<cr>
tnoremap <expr> <esc> (&filetype == "fzf") ? "<esc>" : "<c-\><c-n>"
tnoremap <expr> <c-j> (&filetype == "fzf") ? "<c-n>" : "<c-j>"
tnoremap <expr> <c-k> (&filetype == "fzf") ? "<c-p>" : "<c-k>"

" Completion
inoremap <expr> <cr> pumvisible() ? "\<c-y>" : "\<c-g>u\<cr>"
